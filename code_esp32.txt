#include <WiFi.h>
#include <WebServer.h>
#include <Preferences.h>
#include <HTTPClient.h>

Preferences preferences; // Bộ nhớ lưu WiFi
WebServer server(80);    // WebServer chạy trên cổng 80

// Hàm hiển thị trang nhập WiFi
void handleRoot() {
    String html = "<html><body>"
                  "<h2>Configure WiFi for ESP32</h2>"
                  "<form action='/save' method='POST'>"
                  "SSID: <input type='text' name='ssid'><br>"
                  "Password: <input type='password' name='pass'><br><br>"
                  "<input type='submit' value='Save WiFi'>"
                  "</form></body></html>";

    server.send(200, "text/html", html);
}

// Hàm xử lý lưu WiFi vào bộ nhớ
void handleSave() {
    String ssid = server.arg("ssid");
    String pass = server.arg("pass");

    if (ssid.length() > 0 && pass.length() > 0) {
        preferences.begin("wifi", false);
        preferences.putString("ssid", ssid);
        preferences.putString("pass", pass);
        preferences.end();

        server.send(200, "text/html", "<h1>WiFi saved, reboot ESP!</h1>");
        delay(2000);
        ESP.restart(); // Khởi động lại để kết nối WiFi
    } else {
        server.send(400, "text/html", "<h1>Please enter complete information!</h1>");
    }
}

// Khởi động WebServer
void startWebServer() {
    WiFi.softAP("ESP32_Setup"); // Tạo WiFi AP
    Serial.println("WiFi AP has started!");

    server.on("/", handleRoot);
    server.on("/save", handleSave);
    server.begin();
}

void setup() {
    Serial.begin(115200);
    preferences.begin("wifi", false);

    // Lấy SSID và Password từ bộ nhớ
    String ssid = preferences.getString("ssid", "");
    String pass = preferences.getString("pass", "");

    if (ssid != "") {
        Serial.println("Connecting to WiFi...");
        WiFi.begin(ssid.c_str(), pass.c_str());

        int timeout = 10; // Đợi 10 giây để kết nối WiFi
        while (WiFi.status() != WL_CONNECTED && timeout > 0) {
            delay(1000);
            Serial.print(".");
            timeout--;
        }

        if (WiFi.status() == WL_CONNECTED) {
            Serial.println("\nConnection successful!");
            Serial.println(WiFi.localIP());
            return;
        }
    }

    // Nếu không có WiFi, bật chế độ cấu hình qua WebServer
    startWebServer();
}


//-------------------------------------------------------------------------------------------------------------------------------
void sendSensorData() {
    if (WiFi.status() == WL_CONNECTED) {
        HTTPClient http;

        String serverUrl = "http://192.168.1.79:8081/sensor"; // đổi thành IP máy tính bạn
        http.begin(serverUrl);
        http.addHeader("Content-Type", "application/json");

        // Tạo JSON string
        String json = "{";
        json += "\"device_id\":\"esp32_001\",";
        json += "\"temperature\":25.6,";
        json += "\"humidity\":60.3";
        json += "}";

        int httpResponseCode = http.POST(json);

        if (httpResponseCode > 0) {
            String response = http.getString();
            Serial.println("Response code: " + String(httpResponseCode));
            Serial.println("Response: " + response);
        } else {
            Serial.println("POST failed, error: " + http.errorToString(httpResponseCode));
        }

        http.end();
    } else {
        Serial.println("WiFi not connected!");
    }
}

unsigned long lastSend = 0;
void loop() {
  server.handleClient();

  
  if (WiFi.status() == WL_CONNECTED && millis() - lastSend > 10000) {
  sendSensorData();
  lastSend = millis();
  }
}

